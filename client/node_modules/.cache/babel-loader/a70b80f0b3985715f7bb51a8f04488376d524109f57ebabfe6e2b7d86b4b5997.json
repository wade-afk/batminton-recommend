{"ast":null,"code":"// 설문 응답을 라벨로 변환하는 함수\nexport function mapSurveyToLabels(surveyResponses,surveyMapping){const labels={PlayStyle:null,WeightPref:null,BalancePref:null,ShaftFlex:null,GripStrength:null,Level:null};surveyResponses.forEach((response,index)=>{const questionNumber=`Q${index+1}`;const mapping=surveyMapping.find(m=>m['문항']===questionNumber&&m['응답']===response);if(mapping&&mapping['매핑 라벨']&&mapping['매핑 값']){const labelType=mapping['매핑 라벨'];if(labels.hasOwnProperty(labelType)){labels[labelType]=mapping['매핑 값'];}}});return labels;}// 라켓 유사도 점수 계산\nexport function calculateSimilarityScore(userLabels,racket){let score=0;let totalPossible=0;// PlayStyle 매칭 (라켓 종류 기반)\nif(userLabels.PlayStyle){totalPossible++;const racketType=racket['종류']||'';if(userLabels.PlayStyle==='공격형'&&racketType.includes('ASTROX')){score++;}else if(userLabels.PlayStyle==='수비형'&&racketType.includes('NANOFLARE')){score++;}else if(userLabels.PlayStyle==='올라운드형'&&racketType.includes('ARCSABER')){score++;}}// WeightPref 매칭\nif(userLabels.WeightPref&&racket['무게']){totalPossible++;const racketWeight=racket['무게'];if(racketWeight.includes(userLabels.WeightPref)){score++;}}// BalancePref 매칭\nif(userLabels.BalancePref&&racket['밸런스 포인트']){totalPossible++;const balance=racket['밸런스 포인트'];if(userLabels.BalancePref==='헤드헤비'&&balance.includes('공격형')){score++;}else if(userLabels.BalancePref==='헤드라이트'&&balance.includes('기술형')){score++;}else if(userLabels.BalancePref==='밸런스형'&&balance.includes('올라운더형')){score++;}}// ShaftFlex 매칭\nif(userLabels.ShaftFlex&&racket['샤프트 유연성']){totalPossible++;const flex=racket['샤프트 유연성'];if(userLabels.ShaftFlex==='단단함'&&(flex.includes('Stiff')||flex.includes('STIFF'))){score++;}else if(userLabels.ShaftFlex==='유연함'&&(flex.includes('Flexible')||flex.includes('HI-FLEX'))){score++;}else if(userLabels.ShaftFlex==='중간'&&flex.includes('Medium')){score++;}}// Level 매칭 (가격 기반)\nif(userLabels.Level&&racket[' 가격 ']){totalPossible++;const price=parseInt(racket[' 가격 '].replace(/[^\\d]/g,''));if(userLabels.Level==='입문'&&price<=80000){score++;}else if(userLabels.Level==='초급'&&price<=150000){score++;}else if(userLabels.Level==='중급'&&price<=250000){score++;}else if(userLabels.Level==='상급'&&price>250000){score++;}}return totalPossible>0?score/totalPossible*100:0;}// 라켓 추천 함수\nexport function getRecommendations(surveyResponses,surveyMapping,racketData){// 설문 응답을 라벨로 변환\nconst userLabels=mapSurveyToLabels(surveyResponses,surveyMapping);// 각 라켓에 대한 유사도 점수 계산\nconst racketScores=racketData.map(racket=>({...racket,similarityScore:calculateSimilarityScore(userLabels,racket)}));// 점수 순으로 정렬하고 상위 3개 선택\nconst topRackets=racketScores.sort((a,b)=>b.similarityScore-a.similarityScore).slice(0,3);return{userLabels,recommendations:topRackets};}","map":{"version":3,"names":["mapSurveyToLabels","surveyResponses","surveyMapping","labels","PlayStyle","WeightPref","BalancePref","ShaftFlex","GripStrength","Level","forEach","response","index","questionNumber","mapping","find","m","labelType","hasOwnProperty","calculateSimilarityScore","userLabels","racket","score","totalPossible","racketType","includes","racketWeight","balance","flex","price","parseInt","replace","getRecommendations","racketData","racketScores","map","similarityScore","topRackets","sort","a","b","slice","recommendations"],"sources":["C:/testAI/batminton_recommand/client/src/utils/recommendationEngine.js"],"sourcesContent":["// 설문 응답을 라벨로 변환하는 함수\r\nexport function mapSurveyToLabels(surveyResponses, surveyMapping) {\r\n  const labels = {\r\n    PlayStyle: null,\r\n    WeightPref: null,\r\n    BalancePref: null,\r\n    ShaftFlex: null,\r\n    GripStrength: null,\r\n    Level: null\r\n  };\r\n\r\n  surveyResponses.forEach((response, index) => {\r\n    const questionNumber = `Q${index + 1}`;\r\n    const mapping = surveyMapping.find(m => \r\n      m['문항'] === questionNumber && \r\n      m['응답'] === response\r\n    );\r\n\r\n    if (mapping && mapping['매핑 라벨'] && mapping['매핑 값']) {\r\n      const labelType = mapping['매핑 라벨'];\r\n      if (labels.hasOwnProperty(labelType)) {\r\n        labels[labelType] = mapping['매핑 값'];\r\n      }\r\n    }\r\n  });\r\n\r\n  return labels;\r\n}\r\n\r\n// 라켓 유사도 점수 계산\r\nexport function calculateSimilarityScore(userLabels, racket) {\r\n  let score = 0;\r\n  let totalPossible = 0;\r\n\r\n  // PlayStyle 매칭 (라켓 종류 기반)\r\n  if (userLabels.PlayStyle) {\r\n    totalPossible++;\r\n    const racketType = racket['종류'] || '';\r\n    if (userLabels.PlayStyle === '공격형' && racketType.includes('ASTROX')) {\r\n      score++;\r\n    } else if (userLabels.PlayStyle === '수비형' && racketType.includes('NANOFLARE')) {\r\n      score++;\r\n    } else if (userLabels.PlayStyle === '올라운드형' && racketType.includes('ARCSABER')) {\r\n      score++;\r\n    }\r\n  }\r\n\r\n  // WeightPref 매칭\r\n  if (userLabels.WeightPref && racket['무게']) {\r\n    totalPossible++;\r\n    const racketWeight = racket['무게'];\r\n    if (racketWeight.includes(userLabels.WeightPref)) {\r\n      score++;\r\n    }\r\n  }\r\n\r\n  // BalancePref 매칭\r\n  if (userLabels.BalancePref && racket['밸런스 포인트']) {\r\n    totalPossible++;\r\n    const balance = racket['밸런스 포인트'];\r\n    if (userLabels.BalancePref === '헤드헤비' && balance.includes('공격형')) {\r\n      score++;\r\n    } else if (userLabels.BalancePref === '헤드라이트' && balance.includes('기술형')) {\r\n      score++;\r\n    } else if (userLabels.BalancePref === '밸런스형' && balance.includes('올라운더형')) {\r\n      score++;\r\n    }\r\n  }\r\n\r\n  // ShaftFlex 매칭\r\n  if (userLabels.ShaftFlex && racket['샤프트 유연성']) {\r\n    totalPossible++;\r\n    const flex = racket['샤프트 유연성'];\r\n    if (userLabels.ShaftFlex === '단단함' && (flex.includes('Stiff') || flex.includes('STIFF'))) {\r\n      score++;\r\n    } else if (userLabels.ShaftFlex === '유연함' && (flex.includes('Flexible') || flex.includes('HI-FLEX'))) {\r\n      score++;\r\n    } else if (userLabels.ShaftFlex === '중간' && flex.includes('Medium')) {\r\n      score++;\r\n    }\r\n  }\r\n\r\n  // Level 매칭 (가격 기반)\r\n  if (userLabels.Level && racket[' 가격 ']) {\r\n    totalPossible++;\r\n    const price = parseInt(racket[' 가격 '].replace(/[^\\d]/g, ''));\r\n    if (userLabels.Level === '입문' && price <= 80000) {\r\n      score++;\r\n    } else if (userLabels.Level === '초급' && price <= 150000) {\r\n      score++;\r\n    } else if (userLabels.Level === '중급' && price <= 250000) {\r\n      score++;\r\n    } else if (userLabels.Level === '상급' && price > 250000) {\r\n      score++;\r\n    }\r\n  }\r\n\r\n  return totalPossible > 0 ? (score / totalPossible) * 100 : 0;\r\n}\r\n\r\n// 라켓 추천 함수\r\nexport function getRecommendations(surveyResponses, surveyMapping, racketData) {\r\n  // 설문 응답을 라벨로 변환\r\n  const userLabels = mapSurveyToLabels(surveyResponses, surveyMapping);\r\n  \r\n  // 각 라켓에 대한 유사도 점수 계산\r\n  const racketScores = racketData.map(racket => ({\r\n    ...racket,\r\n    similarityScore: calculateSimilarityScore(userLabels, racket)\r\n  }));\r\n\r\n  // 점수 순으로 정렬하고 상위 3개 선택\r\n  const topRackets = racketScores\r\n    .sort((a, b) => b.similarityScore - a.similarityScore)\r\n    .slice(0, 3);\r\n\r\n  return {\r\n    userLabels,\r\n    recommendations: topRackets\r\n  };\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}